{"ast":null,"code":"var _jsxFileName = \"/Users/julio/robofriends/src/App.js\";\nimport React, { Component } from 'react';\nimport CardList from './CardList';\nimport SearchBox from './SearchBox';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass App extends Component {\n  constructor() {\n    super();\n    this.onSearchChange = event => {\n      //anytime you make your own methods on a component\n      this.setState({\n        searchfield: event.target.value\n      });\n    };\n    this.state = {\n      // something that can change and affect our app\n      robots: [],\n      searchfield: ''\n    };\n  }\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(users => this.setState({\n      robots: users\n    }));\n  }\n  render() {\n    const filteredRobots = this.state.robots.filter(robot => {\n      return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n    });\n    if (this.state.robots.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this);\n    } else {\n      return (\n        /*#__PURE__*/\n        //remember we only need to return just one single parent so wrap around a div\n        _jsxDEV(\"div\", {\n          className: \"tc\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"f1\",\n            children: \" RoboFriends\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n            searchChange: this.onSearchChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 6\n          }, this), /*#__PURE__*/_jsxDEV(\"scroll\", {\n            children: /*#__PURE__*/_jsxDEV(CardList, {\n              robots: filteredRobots\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 7\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 6\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 5\n        }, this)\n      );\n    }\n  }\n}\nexport default App;","map":{"version":3,"names":["React","Component","CardList","SearchBox","jsxDEV","_jsxDEV","App","constructor","onSearchChange","event","setState","searchfield","target","value","state","robots","componentDidMount","fetch","then","response","json","users","render","filteredRobots","filter","robot","name","toLowerCase","includes","length","children","fileName","_jsxFileName","lineNumber","columnNumber","className","searchChange"],"sources":["/Users/julio/robofriends/src/App.js"],"sourcesContent":["import React, { Component } from 'react';\nimport CardList from './CardList';\nimport SearchBox from './SearchBox';\n\nimport './App.css';\n\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = { // something that can change and affect our app\n\t\t\trobots: [],\n\t\t\tsearchfield: ''\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t.then(response => response.json())\n\t\t.then(users => this.setState({ robots: users}));\n\t}\n\tonSearchChange = (event) => { //anytime you make your own methods on a component\n\t\tthis.setState({ searchfield: event.target.value})\n\t}\n\n\trender () {\n\t\tconst filteredRobots = this.state.robots.filter(robot => {\n\t\t\treturn robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\n\t\t})\n\n\t\tif (this.state.robots.length === 0) {\n\t\t\treturn <h1>Loading</h1>\n\t\t}\n\t\telse {\n\t\t\treturn ( //remember we only need to return just one single parent so wrap around a div\n\t\t\t\t<div className = 'tc'>\n\t\t\t\t\t<h1 className= 'f1'> RoboFriends</h1>\n\t\t\t\t\t<SearchBox searchChange = {this.onSearchChange}/>\n\t\t\t\t\t<scroll>\n\t\t\t\t\t\t<CardList robots = {filteredRobots}/>\n\t\t\t\t\t</scroll>\n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n}\n\nexport default App;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,SAAS,MAAM,aAAa;AAEnC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGnB,MAAMC,GAAG,SAASL,SAAS,CAAC;EAC3BM,WAAWA,CAAA,EAAG;IACb,KAAK,CAAC,CAAC;IAAA,KAYRC,cAAc,GAAIC,KAAK,IAAK;MAAE;MAC7B,IAAI,CAACC,QAAQ,CAAC;QAAEC,WAAW,EAAEF,KAAK,CAACG,MAAM,CAACC;MAAK,CAAC,CAAC;IAClD,CAAC;IAbA,IAAI,CAACC,KAAK,GAAG;MAAE;MACdC,MAAM,EAAE,EAAE;MACVJ,WAAW,EAAE;IACd,CAAC;EACF;EAEAK,iBAAiBA,CAAA,EAAG;IACnBC,KAAK,CAAC,4CAA4C,CAAC,CAClDC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,KAAK,IAAI,IAAI,CAACX,QAAQ,CAAC;MAAEK,MAAM,EAAEM;IAAK,CAAC,CAAC,CAAC;EAChD;EAKAC,MAAMA,CAAA,EAAI;IACT,MAAMC,cAAc,GAAG,IAAI,CAACT,KAAK,CAACC,MAAM,CAACS,MAAM,CAACC,KAAK,IAAI;MACxD,OAAOA,KAAK,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC,IAAI,CAACd,KAAK,CAACH,WAAW,CAACgB,WAAW,CAAC,CAAC,CAAC;IAC/E,CAAC,CAAC;IAEF,IAAI,IAAI,CAACb,KAAK,CAACC,MAAM,CAACc,MAAM,KAAK,CAAC,EAAE;MACnC,oBAAOxB,OAAA;QAAAyB,QAAA,EAAI;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IACxB,CAAC,MACI;MACJ;QAAA;QAAS;QACR7B,OAAA;UAAK8B,SAAS,EAAG,IAAI;UAAAL,QAAA,gBACpBzB,OAAA;YAAI8B,SAAS,EAAE,IAAI;YAAAL,QAAA,EAAC;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACrC7B,OAAA,CAACF,SAAS;YAACiC,YAAY,EAAI,IAAI,CAAC5B;UAAe;YAAAuB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC,CAAC,eACjD7B,OAAA;YAAAyB,QAAA,eACCzB,OAAA,CAACH,QAAQ;cAACa,MAAM,EAAIQ;YAAe;cAAAQ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL;MAAC;IAER;EACD;AACD;AAEA,eAAe5B,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}